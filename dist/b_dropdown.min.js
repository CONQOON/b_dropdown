/*! b_dropdown - v0.2.0 - 2015-03-06
* Copyright (c) 2015 Benjamin Gr√∂ner @ b:dreizehn Licensed MIT */
(function(){var a=function(a,b){return function(){return a.apply(b,arguments)}};define("b_dropdown",["jquery"],function(b){var c,d;return c=function(){function c(c,d){this.toggleMock=a(this.toggleMock,this),this.select=a(this.select,this),this.resetSelection=a(this.resetSelection,this),this.openMock=a(this.openMock,this),this.closeMock=a(this.closeMock,this),this._handleWindowClick=a(this._handleWindowClick,this),this._handleToggleBtnClick=a(this._handleToggleBtnClick,this),this._handleChange=a(this._handleChange,this),this._handleMockOptionSelection=a(this._handleMockOptionSelection,this);var e;if(this.$selectEl=b(c),this.$realOptions=this.$selectEl.children("option"),this.opts=b.extend({},this.defaultOpts,d||{}),"SELECT"!==this.$selectEl.prop("tagName"))throw"The provided HTML element is no <select> element";e=this._getRenderDataFromSelectStructure(this.$selectEl),this.opts.selectedOption||null==e.selectedOption||(this.opts.selectedOption=e.selectedOption),this.$mockEl=b('<div class="bJS_md_dropdown b_md_dropdown"></div>'),this.$selectEl.before(this.$mockEl),this.$selectEl.addClass("b_md_dropdown-select"),this._renderMockHTMLFromData(this.$mockEl,e),this.$mockToggleHeader=this.$mockEl.find(".bJS_md_dropdown-toggle"),this.$mockMenu=this.$mockEl.find("ul"),this.$mockOptions=this.$mockMenu.children("li"),this.data={isMockOpen:!1,isDisabled:!1,ddOptions:this._initDropdownOptions()},this.changeHandlers=[],this.opts.staticHeader&&this.$mockToggleHeader.html("<span>"+this.opts.staticHeader+"</span>"),null!=this.opts.selectedOption&&this.opts.selectedOption>=0?this.select(this.opts.selectedOption,!0):this.select(0,!0),this.opts.disabled===!1?this.enable():(this.opts.disabled||this.$selectEl.prop("disabled"))&&this.disable(),this._bindEvents()}return c.prototype.defaultOpts={disabled:void 0,firstOptionIsPlaceholder:!1,hideOriginalSelect:!0},c.prototype._renderMockHTMLFromData=function(a,c){var d,e,f,g,h,i,j,k,l,m;for(a.append(b('<button class="bJS_md_dropdown-toggle b_md_dropdown-toggle"></button>')),e=b('<div class="b_md_dropdown-menuWrap"></div>'),a.append(e),d=b("<ul></ul>"),e.append(d),m=c.options,g=k=0,l=m.length;l>k;g=++k)i=m[g],"string"==typeof i?(h=i,j=i):(j=i.value,h=i.label||j),f=b('<li data-value="'+j+'"></li>'),d.append(f),f.text(h),i.disabled&&f.addClass("b_md_dropdown-disabled"),0===g&&this.opts.firstOptionIsPlaceholder&&f.addClass("b_md_dropdown-placeholder");return a},c.prototype._getRenderDataFromSelectStructure=function(a){var c,d;return d={options:[]},c=a.children("option"),c.each(function(a){var c,e;return e={},c=b(this),e.label=c.text()||"",e.value=c.val()||e.label,e.disabled=c.prop("disabled"),e.selected=c.prop("selected"),e.selected&&(d.selectedOption=a),d.options.push(e)}),d},c.prototype._initDropdownOptions=function(){var a,b;return b=this,a=[],this.$realOptions.each(function(){return a.push(new d(b,this))}),a},c.prototype._bindEvents=function(){return this.$mockToggleHeader.on("click",this._handleToggleBtnClick),this.$mockOptions.on("click",this._handleMockOptionSelection),this.$selectEl.on("change",this._handleChange),b(window).on("click",this._handleWindowClick)},c.prototype._handleMockOptionSelection=function(a){return this.select(this.$mockOptions.index(b(a.currentTarget))),this.closeMock()},c.prototype._handleChange=function(){var a;return a=this._updateSelect(this.$realOptions.filter(":selected"),!1,!0,!1,!0),a&&!a.isDisabled()?this.closeMock():void 0},c.prototype._handleToggleBtnClick=function(a){return a.preventDefault(),this.toggleMock()},c.prototype._handleWindowClick=function(a){return this.isDisabled()||!this.isMockOpen()||b.contains(this.$mockEl.get(0),a.target)?void 0:this.closeMock()},c.prototype._unbindEvents=function(){return this.$mockToggleHeader.off("click",this._handleToggleBtnClick),this.$mockOptions.off("click",this._handleMockOptionSelection),this.$selectEl.off("change",this._handleChange),b(window).off("click",this._handleWindowClick)},c.prototype._updateSelect=function(a,b,c,d,e){var f,g,h,i,j,k;if(g=this.getOption(a),h=new Date,g&&!g.isDisabled()&&(this.data.selectedOption=g,b&&g.$realEl.prop("selected",!0),c&&this.$mockToggleHeader.text(g.getLabel()),d&&this.$selectEl.trigger("change"),e))for(k=this.changeHandlers,i=0,j=k.length;j>i;i++)f=k[i],f.call(this,{dropdown:this,option:g,timestamp:h});return g},c.prototype.closeMock=function(){return this.isDisabled()||(this.$mockMenu.removeClass("b_md_dropdown-visible"),this.data.isMockOpen=!1),this},c.prototype.destroy=function(){return this.$selectEl.removeClass("b_md_dropdown-select"),this.$mockEl.remove(),this._unbindEvents(),void delete this},c.prototype.disable=function(){return this.closeMock(),this.$selectEl.prop("disabled",!0),this.$mockEl.addClass("b_md_dropdown-disabled"),this.data.isDisabled=!0,this},c.prototype.disableOption=function(a){var b;return b=this.getOption(a),b&&b.disable(),b},c.prototype.enable=function(){return this.$selectEl.prop("disabled",!1),this.$mockEl.removeClass("b_md_dropdown-disabled"),this.data.isDisabled=!1,this},c.prototype.enableOption=function(a){var b;return b=this.getOption(a),b&&b.enable(),b},c.prototype.getOption=function(a){var c,e;if(a instanceof d)e=this.data.ddOptions.indexOf(a);else if(a instanceof b)c=a;else if(a instanceof HTMLElement)c=b(a);else{if("number"!=typeof a)throw"Provided argument is neither a html element nor a number";e=a}return c&&(e=this.$realOptions.index(c)),this.getOptionByIndex(e)},c.prototype.getOptionByIndex=function(a){return this.data.ddOptions.length>a?this.data.ddOptions[a]:void 0},c.prototype.getSelectedIndex=function(){var a;return a=this.getSelectedOption(),a?a.getIndex():-1},c.prototype.getSelectedLabel=function(){var a;return a=this.getSelectedOption(),a?a.getLabel():void 0},c.prototype.getSelectedOption=function(){return this.data.selectedOption||void 0},c.prototype.getSelectedValue=function(){var a;return a=this.getSelectedOption(),a?a.getValue():void 0},c.prototype.isDisabled=function(){return this.data.isDisabled},c.prototype.isMockOpen=function(){return this.data.isMockOpen||!1},c.prototype.offChange=function(a){var b;return b=this.changeHandlers.indexOf(a),b>=0?(this.changeHandlers.splice(b,1),a):void 0},c.prototype.onChange=function(a){return this.changeHandlers.push(a),a},c.prototype.openMock=function(){return this.isDisabled()||(this.$mockMenu.addClass("b_md_dropdown-visible"),this.data.isMockOpen=!0),this},c.prototype.removeAllHandlers=function(){var a;return a=this.changeHandlers,this.changeHandlers=[],a},c.prototype.resetSelection=function(){return this.select(0)},c.prototype.select=function(a){return this._updateSelect(a,!0,!0,!0,!0)},c.prototype.toggleMock=function(){return this.isMockOpen()?this.closeMock():this.openMock(),this},c}(),d=function(){function a(c,d){if(this.dropdown=c,d instanceof a)this.$realEl=d.$realEl;else if(d instanceof b)this.$realEl=d.eq(0);else if(d instanceof HTMLElement)this.$realEl=b(d);else{if("number"!=typeof d)throw"Provided argument is neither a html element nor a number";this.index=d,this.$realEl=this.dropdown.$realOptions.eq(d)}null==this.index&&(this.index=this.dropdown.$realOptions.index(this.$realEl)),this.$mockEl=this.dropdown.$mockOptions.eq(this.index),this.isDisabled(),this.getLabel(),this.getValue()}return a.prototype.disable=function(){return this.disabled=!0,this.$realEl.prop("disabled",!0),this.$mockEl.addClass("b_md_dropdown-disabled")},a.prototype.enable=function(){return this.disabled=!1,this.$realEl.prop("disabled",!1),this.$mockEl.removeClass("b_md_dropdown-disabled")},a.prototype.get$RealEl=function(){return this.$realEl},a.prototype.get$MockEl=function(){return this.$mockEl},a.prototype.getIndex=function(){return null==this.index&&(this.index=this.dropdown.$realOptions.index(this.$realEl)),this.index},a.prototype.getLabel=function(a){return(a||null==this.label)&&(this.label=this.$realEl.text()),this.label},a.prototype.getValue=function(a){return(a||null==this.value)&&(this.value=this.$realEl.val()||""),this.value},a.prototype.isDisabled=function(a){return(a||null==this.disabled)&&(this.disabled=this.$realEl.prop("disabled")),this.disabled},a}(),c})}).call(this);